version: "3.9"

services:
  db:
    image: postgres:14.0
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DEBUG=true
    ports:
      - 5432:5432


  zookeeper:
    image: 'bitnami/zookeeper:3.6.2'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_PORT_NUMBER=2181
    volumes:
      - ./data/zookeeper:/bitnami

  kafka:
    image: 'bitnami/kafka:2.7.0'
    ports:
      - 9093:9093
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    volumes:
      - ./data/kafka:/bitnami/kafka
    depends_on:
      - zookeeper

    healthcheck:
      test: ["CMD", "/bitnami/kafka/check.sh", "kafka" ]
      interval: 30s
      timeout: 5s
      retries: 3

  downloader:
    build: downloader
    environment:
      - PYTHONPATH="${PYTHONPATH}:/usr/src/app"
    volumes:
      - ./downloader:/usr/src/app
      - ./data/frames:/data/frames
    depends_on:
      - db
      - kafka

  web:
    build: web
    volumes:
      - ./web:/usr/src/app
      - ./data/frames:/usr/src/app/static/frames
    ports:
      - 80:80
    depends_on:
      - db
      - downloader
      - kafka